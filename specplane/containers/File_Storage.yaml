meta:
  id: "file_storage"
  name: "File Storage"
  version: "0.1.0"
  owner: "SpecPlane"
  type: "container"
  level: "container"
  purpose: "Provides local file-based storage for configuration, sessions, and generated artifacts"
  status: "prototype"

# CONSOLIDATED: Combined both contracts sections
contracts:
  file_operations:
    - operation: "read_config"
      path: "config/{file}.yaml"
      formats: ["questions.yaml", "patterns.yaml", "templates.yaml"]
      errors: ["file_not_found", "invalid_yaml", "permission_denied"]
      
    - operation: "save_session"
      path: ".specplane/sessions/{session_id}.json"
      format: "SessionState"
      atomic: true  # Ensure complete writes
      
    - operation: "resume_session"
      path: ".specplane/sessions/{session_id}.json"
      format: "SessionState"
      errors: ["session_not_found", "corrupted_session"]
      
    - operation: "write_spec"
      path: "out/specs/{component_name}.yaml"
      format: "SpecPlaneSpec"
      backup: true  # Keep previous version
      
    - operation: "write_prompt"
      path: "out/prompts/{component_name}_cursor.md"
      format: "CursorPrompt"
      
    - operation: "write_report"
      path: "out/reports/{component_name}_coverage.md"
      format: "CoverageReport"
      
    - operation: "log_event"
      path: ".specplane/logs/events.jsonl"
      format: "EventLog"
      append: true

  directory_structure:
    config/:
      description: "Configuration files and question banks"
      files:
        - "questions.yaml"        # Question bank
        - "patterns.yaml"         # Common patterns library
        - "risk_rules.yaml"       # Risk assessment rules
      permissions: "read_only"
      
    templates/:
      description: "Jinja2 templates for generation"
      files:
        - "component.yaml.j2"     # Component spec template
        - "cursor_prompt.md.j2"   # Cursor prompt template
        - "coverage_report.md.j2" # Coverage report template
      permissions: "read_only"
      
    .specplane/:
      description: "Runtime data and state"
      subdirs:
        sessions/: "Active and saved sessions"
        logs/: "Event logs and debugging info"
        cache/: "Template compilation cache"
      permissions: "read_write"
      gitignore: true
      
    out/:
      description: "Generated artifacts"
      subdirs:
        specs/: "Generated SpecPlane specifications"
        prompts/: "Generated Cursor prompts"
        reports/: "Coverage and risk reports"
      permissions: "read_write"
      user_controlled: true

  data_schemas:
    SessionState:
      description: "Resumable session state"
      fields:
        - "session_id: string"
        - "component_name: string"
        - "component_type: enum"
        - "answers: object"
        - "current_question_id: string"
        - "progress: float"
        - "created_at: datetime"
        - "updated_at: datetime"
        
    EventLog:
      description: "JSONL event logging format"
      fields:
        - "timestamp: iso8601"
        - "event_name: string"
        - "session_id: string"
        - "properties: object"
        
    SpecPlaneSpec:
      description: "Generated component specification"
      format: "YAML"
      schema_ref: "linked/schemas/SpecPlaneSpec.json"
      
    CursorPrompt:
      description: "AI-ready implementation prompt"
      format: "Markdown"
      sections: ["purpose", "requirements", "constraints", "implementation_guide"]

  configuration_files:
    - path: "config/specplane.yaml"
      schema: "SpecPlaneConfig"
      purpose: "Main configuration file"
      
    - path: "config/integrations.yaml"
      schema: "IntegrationsConfig"  
      purpose: "API keys and external service configs"
      
    - path: "config/observability.yaml"
      schema: "ObservabilityConfig"
      purpose: "Metrics and logging configuration"

interfaces:
  events_out:
    - name: "file.operation.started"
      when: "file_operation_begins"
      properties: ["operation_type", "file_path", "session_id"]
      pii: false
      
    - name: "file.operation.completed"
      when: "file_operation_succeeds"
      properties: ["operation_type", "file_path", "file_size", "duration_ms"]
      pii: false
      
    - name: "file.operation.failed"
      when: "file_operation_errors"
      properties: ["operation_type", "file_path", "error_code", "error_message"]
      pii: false

constraints:
  performance:
    max_file_size: "10MB"
    concurrent_operations: 10
    cache_ttl: "1h"
    
  reliability:
    atomic_writes: true
    backup_on_overwrite: true
    corruption_detection: "checksum"
    
  storage:
    max_sessions: 1000
    log_retention: "30d"
    auto_cleanup: true

error_handling:
  disk_full:
    action: "cleanup_old_sessions"
    threshold: "100MB_free"
    
  permission_denied:
    action: "display_permission_help"
    
  corrupted_file:
    action: "restore_from_backup"
    fallback: "create_new"
    
  missing_config:
    action: "create_default_config"

security_privacy:
  permissions:
    config: "read_only"
    templates: "read_only" 
    runtime: "read_write_user_only"
    output: "read_write_user_only"
    
  data_protection:
    no_sensitive_data: true
    local_only: true
    user_controlled_deletion: true

observability:
  metrics:
    - "files_created_per_session"
    - "average_file_size"
    - "disk_space_used"
    - "file_operation_latency_p95"
    
  health_checks:
    - name: "config_files_readable"
      check: "can_read_questions_yaml"
      
    - name: "output_directory_writable"
      check: "can_write_test_file"
      
    - name: "sufficient_disk_space"
      check: "available_space > 100MB"

dependencies:
  external:
    - name: "operating_system"
      description: "File system access"
      
  internal:
    - "linked/schemas/*.json"  # Data validation schemas
    - "templates/*.j2"         # Template files

backup_strategy:
  session_state:
    frequency: "on_every_update"
    retention: "until_session_complete"
    
  generated_specs:
    frequency: "on_overwrite"
    retention: "3_versions"
    naming: "{filename}.{timestamp}.bak"
    
  logs:
    rotation: "daily"
    compression: true
    retention: "30d"

# File path templates for consistency
path_templates:
  session: ".specplane/sessions/{session_id}_{timestamp}.json"
  spec: "out/specs/{component_name}.yaml"
  prompt: "out/prompts/{component_name}_cursor.md"
  report: "out/reports/{component_name}_coverage.md"
  log: ".specplane/logs/events_{date}.jsonl"
  backup: ".specplane/backups/{original_name}.{timestamp}.bak"

example_configs:
  specplane_config:
    content: |
      meta:
        version: "0.1.0"
        mode: "development"
        
      defaults:
        question_timeout: "30m"
        auto_save_interval: "30s"
        output_directory: "out"
        
      features:
        ai_enhanced_questions: false  # P1 feature
        pattern_learning: false       # P2 feature
        
  integrations_config:
    content: |
      # Optional external integrations
      ai_services:
        openai:
          api_key: "${OPENAI_API_KEY}"
          model: "gpt-4"
          enabled: false
          
      observability:
        mixpanel:
          token: "${MIXPANEL_TOKEN}"
          enabled: false
          
        datadog:
          api_key: "${DATADOG_API_KEY}"
          enabled: false
          
      # Always available - local only
      local_logging:
        events_file: ".specplane/logs/events.jsonl"
        metrics_file: ".specplane/logs/metrics.json"
        enabled: true

# CONSOLIDATED: Combined both tests sections
tests:
  acceptance:
    - "Config files loaded from config/ directory on startup"
    - "Session state persisted to .specplane/sessions/ after each answer"
    - "Generated files written to out/specs/ and out/prompts/"
    - "Disk full scenario triggers cleanup + user warning"
    - "Corrupted session file recovered from backup automatically"
    - "File operations complete in <500ms for typical files"
    - "Missing config files use sensible defaults without crashing"
    - "Invalid API keys logged with clear warning (don't block usage)"
    - "Environment variables ${VAR} expanded correctly in config"
    - "Config validation errors show line number and field name"
    
  validation_tests:
    human_validation:
      - "File organization assessment: Is output structure clear and logical?"
      
    automated_metrics:
      - "file_operation_latency_p95 < 200ms"
      - "file_corruption_recovery_rate > 95%"
      - "disk_space_monitoring_accuracy"