meta:
  version: "0.1.0"
  purpose: "Domain patterns for intelligent question generation"

patterns:
  storage_systems:
    keywords: ["storage", "file", "database", "persistence", "cache", "store", "save"]
    aliases: ["db", "filesystem", "s3", "redis", "memory"]
    confidence_boost: 1.2
    cache_ttl: "1h"  # Pattern matching can be expensive
    precompute: ["critical_concerns", "reasoning_chains"]
    
    critical_concerns:
      - "data_corruption"
      - "backup_recovery"
      - "concurrent_access"
      - "disk_space_limits"
      - "permission_errors"
      
    question_categories:
      - "reliability"
      - "backup_strategy"
      - "error_handling"
      - "performance"
      - "security"
      
    reasoning_chains:
      - "storage_failure_chain"
      - "data_integrity_chain"
      - "backup_recovery_chain"
      
    common_gaps:
      - "missing_backup_strategy"
      - "no_corruption_detection"
      - "undefined_retention_policy"

  user_interfaces:
    keywords: ["screen", "widget", "component", "ui", "interface", "form", "button"]
    aliases: ["page", "view", "modal", "dialog", "popup"]
    confidence_boost: 1.1
    
    critical_concerns:
      - "loading_states"
      - "error_states"
      - "empty_states"
      - "accessibility"
      - "responsive_design"
      
    question_categories:
      - "user_experience"
      - "accessibility"
      - "state_management"
      - "interaction_design"
      
    reasoning_chains:
      - "ui_state_completeness_chain"
      - "user_experience_chain"
      - "accessibility_chain"
      
    common_gaps:
      - "missing_loading_states"
      - "no_error_handling_ui"
      - "accessibility_not_considered"

  api_services:
    keywords: ["api", "service", "endpoint", "rest", "graphql", "microservice"]
    aliases: ["server", "backend", "web service", "http"]
    confidence_boost: 1.3
    
    critical_concerns:
      - "authentication"
      - "rate_limiting"
      - "error_responses"
      - "versioning"
      - "security"
      
    question_categories:
      - "security"
      - "reliability"
      - "performance"
      - "error_handling"
      
    reasoning_chains:
      - "api_security_chain"
      - "service_reliability_chain"
      - "error_handling_chain"
      
    common_gaps:
      - "missing_authentication"
      - "no_rate_limiting"
      - "poor_error_responses"

  ai_agents:
    keywords: ["ai", "agent", "llm", "model", "inference", "prompt", "embedding"]
    aliases: ["chatbot", "assistant", "ml", "machine learning", "openai"]
    confidence_boost: 1.4
    
    critical_concerns:
      - "safety_guardrails"
      - "cost_control"
      - "fallback_strategies"
      - "prompt_injection"
      - "data_privacy"
      
    question_categories:
      - "safety"
      - "cost_management"
      - "reliability"
      - "privacy"
      
    reasoning_chains:
      - "ai_safety_chain"
      - "cost_optimization_chain"
      - "fallback_strategy_chain"
      
    common_gaps:
      - "no_safety_guardrails"
      - "uncontrolled_costs"
      - "missing_fallbacks"

  mobile_components:
    keywords: ["mobile", "ios", "android", "flutter", "react native", "app"]
    aliases: ["phone", "tablet", "device"]
    confidence_boost: 1.1
    
    critical_concerns:
      - "offline_behavior"
      - "battery_usage"
      - "permissions"
      - "background_processing"
      - "device_storage"
      
    additional_questions:
      - "offline_functionality"
      - "permission_handling"
      - "battery_optimization"
      
    common_gaps:
      - "no_offline_support"
      - "poor_permission_handling"
      - "battery_drain_issues"

  # TODO: Add more patterns here

# Pattern matching logic
matching_rules:
  keyword_scoring:
    exact_match: 10
    partial_match: 5
    alias_match: 8
    context_boost: 2
    
  confidence_thresholds:
    high_confidence: 0.8
    medium_confidence: 0.6
    low_confidence: 0.4
    
  multi_pattern_handling:
    max_patterns: 3
    weight_distribution: "confidence_based"
    overlap_penalty: 0.1

# Pattern combinations (when multiple patterns match)
pattern_combinations:
  storage_api:
    patterns: ["storage_systems", "api_services"]
    additional_concerns: ["data_consistency", "transaction_handling"]
    
  ui_mobile:
    patterns: ["user_interfaces", "mobile_components"]
    additional_concerns: ["touch_interactions", "screen_orientations"]
    
  ai_api:
    patterns: ["ai_agents", "api_services"]
    additional_concerns: ["model_versioning", "inference_caching"]