meta:
  id: "interview_engine"
  name: "Interview Engine"
  version: "0.1.0"
  type: "component"
  level: "component"
  purpose: "Conducts interactive design sessions using dynamically generated questions"
  status: "prototype"

contracts:
  interfaces:
    - name: "conduct_interview"
      input: "SessionConfig"
      output: "CompletedAnswers"
      logic: "question_sequence + user_interaction + state_management"
      
    - name: "ask_next_question"
      input: "SessionState"
      output: "Question | SessionComplete"
      logic: "progress_tracking + context_aware_questioning"
      
    - name: "process_answer"
      input: "Answer + SessionState"
      output: "UpdatedSessionState"
      logic: "validation + context_update + progress_calculation"
      
    - name: "resume_session"
      input: "SessionId"
      output: "RestoredSessionState"
      logic: "state_restoration + progress_validation"

  state_management:
    session_states:
      - "initializing"
      - "questioning"
      - "validating_answer"
      - "calculating_coverage"
      - "completed"
      - "abandoned"
      - "error"
      
    question_flow:
      - "purpose_questions"      # Always first
      - "failure_mode_questions" # Always second
      - "data_flow_questions"    # Core
      - "integration_questions"  # Core
      - "observability_questions" # Optional for P0
      - "coverage_review"        # Always last

  user_interaction:
    input_types:
      - "text"
      - "multiselect"
      - "yes_no"
      - "scale_1_5"
      - "skip"
      
    validation_rules:
      required_questions: ["purpose", "failure_impact", "data_flow"]
      optional_skip_threshold: 3
      session_timeout: "30_minutes"

prototype_modes:
  p0_simple:
    question_source: "static_file_reading"
    total_questions: 15
    skip_advanced_sections: true
    
  p1_smart:
    question_source: "pattern_based_generation"
    total_questions: 25
    conditional_questioning: true
    
  p2_dynamic:
    question_source: "full_reasoning_chains"
    adaptive_depth: true
    context_aware_followups: true

data_flows:
  - name: "conduct_complete_interview"
    sequence: |
      sequenceDiagram
        participant U as User
        participant IE as Interview_Engine
        participant QG as Question_Generator
        participant CA as Coverage_Assessor
        participant FS as File_Storage
        
        U->>IE: start_session(component_name)
        IE->>QG: generate_questions(component_type)
        QG-->>IE: question_sequence
        
        loop Question Flow
          IE->>U: ask_question()
          U->>IE: submit_answer()
          IE->>FS: save_session_state()
          IE->>CA: calculate_coverage()
        end
        
        IE->>CA: final_assessment()
        CA-->>IE: coverage_report
        IE-->>U: session_complete

dependencies:
  internal:
    - "Question_Generator"  # For dynamic questions
    - "Coverage_Assessor"   # For progress tracking
    - "File_Storage"        # For session persistence
  external: []

constraints:
  performance:
    question_response_time: "<500ms"
    session_save_time: "<200ms"
    
  usability:
    max_session_duration: "15_minutes"
    question_clarity_threshold: "user_understands_without_help"
    
  reliability:
    session_recovery_rate: ">99%"
    state_consistency: "atomic_updates"

error_handling:
  invalid_answer:
    action: "show_clarification + retry"
    max_retries: 3
    
  session_timeout:
    action: "save_state + allow_resume"
    
  storage_failure:
    action: "warn_user + continue_in_memory"
    fallback: "manual_export_option"

observability:
  metrics:
    - "questions_per_session_avg"
    - "session_completion_rate"
    - "answer_retry_rate"
    - "session_duration_p95"
    
  events:
    - "interview.session.started"
    - "interview.question.asked"
    - "interview.question.answered"
    - "interview.session.completed"
    - "interview.session.abandoned"

tests:
  acceptance:
    - "Command 'conduct_interview(session_config)' loads questions from config/questions.yaml"
    - "Required questions marked with required:true cannot be skipped"
    - "User input 'skip' advances to next question for optional questions only"
    - "Session state saved to .specplane/sessions/{session_id}.json after each answer"
    - "Progress percentage calculated as (answered / total_questions) * 100"
    - "Question flow stops when all required questions answered"
    - "Invalid session_id returns clear error message"

error_handling:
  invalid_answer:
    test: "Submit empty string to required question"
    expected: "Show clarification prompt + retry (max 3 attempts)"
    
  session_timeout:
    test: "Leave session idle for 30 minutes"
    expected: "Auto-save state + show resume instructions"