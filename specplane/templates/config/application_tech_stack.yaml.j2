meta:
  id: "{{ application_name | lower | replace(' ', '_') }}_tech_stack"
  name: "{{ application_name }} Technology Stack"
  version: "0.1.0"
  purpose: "Technology stack configuration for {{ application_name }}"
  created_at: "{{ timestamp }}"
  session_id: "{{ session_id }}"

application:
  name: "{{ application_name }}"
  type: "{{ application_type }}"  # cli_tool, web_app, mobile_app, api_service, desktop_app
  description: "{{ application_description }}"

primary_stack:
  language: "{{ primary_language }}"
  version: "{{ language_version | default('latest') }}"
  framework: "{{ framework }}"
  framework_version: "{{ framework_version | default('latest') }}"
  {% if secondary_language %}
  secondary_language: "{{ secondary_language }}"
  {% endif %}

dependencies:
  core_libraries:
    {% for lib in core_libraries %}
    - name: "{{ lib.name }}"
      version: "{{ lib.version | default('latest') }}"
      purpose: "{{ lib.purpose }}"
    {% endfor %}
  
  {% if ui_libraries %}
  ui_libraries:
    {% for lib in ui_libraries %}
    - name: "{{ lib.name }}"
      version: "{{ lib.version | default('latest') }}"
      purpose: "{{ lib.purpose }}"
    {% endfor %}
  {% endif %}
  
  {% if testing_libraries %}
  testing_libraries:
    {% for lib in testing_libraries %}
    - name: "{{ lib.name }}"
      version: "{{ lib.version | default('latest') }}"
      purpose: "{{ lib.purpose }}"
    {% endfor %}
  {% endif %}

{% if database_config %}
data_layer:
  database: "{{ database_config.type }}"
  {% if database_config.version %}
  version: "{{ database_config.version }}"
  {% endif %}
  {% if database_config.orm %}
  orm: "{{ database_config.orm }}"
  {% endif %}
  {% if database_config.migration_tool %}
  migrations: "{{ database_config.migration_tool }}"
  {% endif %}
  {% if database_config.connection_pool %}
  connection_pooling: {{ database_config.connection_pool }}
  {% endif %}
{% endif %}

development_tools:
  package_manager: "{{ package_manager }}"
  {% if build_tool %}
  build_tool: "{{ build_tool }}"
  {% endif %}
  {% if bundler %}
  bundler: "{{ bundler }}"
  {% endif %}
  
  code_quality:
    formatter: "{{ formatter | default('default') }}"
    linter: "{{ linter | default('default') }}"
    {% if type_checker %}
    type_checker: "{{ type_checker }}"
    {% endif %}
  
  testing:
    framework: "{{ testing_framework }}"
    coverage_tool: "{{ coverage_tool | default('built-in') }}"
    {% if e2e_testing %}
    e2e_framework: "{{ e2e_testing }}"
    {% endif %}

{% if api_integrations %}
external_integrations:
  {% for integration in api_integrations %}
  {{ integration.name }}:
    purpose: "{{ integration.purpose }}"
    {% if integration.library %}
    client_library: "{{ integration.library }}"
    {% endif %}
    {% if integration.auth_method %}
    authentication: "{{ integration.auth_method }}"
    {% endif %}
    {% if integration.environment_var %}
    environment_var: "{{ integration.environment_var }}"
    {% endif %}
  {% endfor %}
{% endif %}

{% if deployment_config %}
deployment:
  target_environment: "{{ deployment_config.target }}"
  {% if deployment_config.containerization %}
  containerization:
    platform: "{{ deployment_config.containerization.platform }}"
    {% if deployment_config.containerization.base_image %}
    base_image: "{{ deployment_config.containerization.base_image }}"
    {% endif %}
  {% endif %}
  {% if deployment_config.ci_cd %}
  ci_cd:
    platform: "{{ deployment_config.ci_cd.platform }}"
    {% if deployment_config.ci_cd.auto_deploy %}
    auto_deploy: {{ deployment_config.ci_cd.auto_deploy }}
    {% endif %}
  {% endif %}
  {% if deployment_config.hosting %}
  hosting:
    provider: "{{ deployment_config.hosting.provider }}"
    {% if deployment_config.hosting.region %}
    region: "{{ deployment_config.hosting.region }}"
    {% endif %}
  {% endif %}
{% endif %}

project_structure:
  architecture: "{{ architecture_pattern | default('modular') }}"  # modular, layered, hexagonal, microservices
  {% if file_organization %}
  organization: "{{ file_organization }}"  # feature_based, layer_based, domain_based
  {% endif %}
  {% if config_management %}
  configuration: "{{ config_management }}"  # env_files, config_files, cloud_config
  {% endif %}

coding_standards:
  style_guide: "{{ style_guide | default('standard') }}"
  {% if max_line_length %}
  max_line_length: {{ max_line_length }}
  {% endif %}
  {% if naming_convention %}
  naming_convention: "{{ naming_convention }}"
  {% endif %}
  {% if documentation_style %}
  documentation_style: "{{ documentation_style }}"
  {% endif %}
  
  error_handling:
    strategy: "{{ error_handling_strategy | default('explicit') }}"  # explicit, propagate, catch_all
    {% if custom_exceptions %}
    custom_exceptions: {{ custom_exceptions }}
    {% endif %}
    {% if logging_level %}
    logging_level: "{{ logging_level }}"
    {% endif %}

{% if performance_requirements %}
performance_targets:
  {% for target in performance_requirements %}
  {{ target.metric }}: "{{ target.value }}"
  {% endfor %}
{% endif %}

{% if security_requirements %}
security_considerations:
  {% for requirement in security_requirements %}
  {{ requirement.category }}:
    requirement: "{{ requirement.description }}"
    {% if requirement.implementation %}
    implementation: "{{ requirement.implementation }}"
    {% endif %}
  {% endfor %}
{% endif %}

environment_configuration:
  development:
    {% for key, value in dev_environment.items() %}
    {{ key }}: "{{ value }}"
    {% endfor %}
  
  {% if staging_environment %}
  staging:
    {% for key, value in staging_environment.items() %}
    {{ key }}: "{{ value }}"
    {% endfor %}
  {% endif %}
  
  production:
    {% for key, value in prod_environment.items() %}
    {{ key }}: "{{ value }}"
    {% endfor %}

{% if monitoring_config %}
observability:
  logging:
    format: "{{ monitoring_config.logging.format | default('structured') }}"
    level: "{{ monitoring_config.logging.level | default('info') }}"
    {% if monitoring_config.logging.destination %}
    destination: "{{ monitoring_config.logging.destination }}"
    {% endif %}
  
  {% if monitoring_config.metrics %}
  metrics:
    provider: "{{ monitoring_config.metrics.provider }}"
    {% if monitoring_config.metrics.custom_metrics %}
    custom_metrics: {{ monitoring_config.metrics.custom_metrics }}
    {% endif %}
  {% endif %}
  
  {% if monitoring_config.tracing %}
  tracing:
    provider: "{{ monitoring_config.tracing.provider }}"
    sample_rate: {{ monitoring_config.tracing.sample_rate | default(0.1) }}
  {% endif %}
{% endif %}

# Generated file structure suggestion
suggested_project_structure: |
  {{ application_name | lower | replace(' ', '_') }}/
  ├── {{ 'src/' if file_organization == 'src_layout' else '' }}
  │   ├── {{ 'main.' + file_extension }}
  │   ├── {{ 'components/' if architecture_pattern == 'modular' else 'models/' }}
  │   ├── {{ 'services/' if api_integrations else 'utils/' }}
  │   └── {{ 'tests/' if test_location == 'alongside' else '' }}
  ├── {{ 'config/' if config_management == 'config_files' else '' }}
  ├── {{ 'tests/' if test_location == 'separate' else '' }}
  ├── {{ package_file_name }}  # {{ package_manager }} configuration
  ├── .env.example
  ├── README.md
  └── {{ dockerfile_name if deployment_config and deployment_config.containerization else '.gitignore' }}

# Template generation metadata
template_metadata:
  generated_by: "SpecPlane"
  template_version: "{{ template_version | default('0.1.0') }}"
  customization_level: "{{ customization_level | default('standard') }}"  # minimal, standard, comprehensive
  last_updated: "{{ timestamp }}"